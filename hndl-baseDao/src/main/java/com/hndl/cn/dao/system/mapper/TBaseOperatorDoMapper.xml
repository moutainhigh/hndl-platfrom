<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hndl.cn.dao.system.mapper.TBaseOperatorDoMapper">
  <resultMap id="BaseResultMap" type="com.hndl.cn.dao.system.bean.TBaseOperatorDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="loginpwd" jdbcType="VARCHAR" property="loginpwd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="fatherid" jdbcType="INTEGER" property="fatherid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="sequences" jdbcType="VARCHAR" property="sequences" />
    <result column="isextend" jdbcType="CHAR" property="isextend" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="isdelete" jdbcType="CHAR" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginname, username, loginpwd, phone, rolename, roleid, fatherid, createtime, 
    sequences, isextend, openid, isdelete
  </sql>
  <select id="selectByExample" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_base_operator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_base_operator
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_base_operator
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDoExample">
    delete from t_base_operator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDo">
    insert into t_base_operator (id, loginname, username, 
      loginpwd, phone, rolename, 
      roleid, fatherid, createtime, 
      sequences, isextend, openid, 
      isdelete)
    values (#{id,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{loginpwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
      #{roleid,jdbcType=INTEGER}, #{fatherid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{sequences,jdbcType=VARCHAR}, #{isextend,jdbcType=CHAR}, #{openid,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDo">
    insert into t_base_operator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginname != null">
        loginname,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="loginpwd != null">
        loginpwd,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
      <if test="fatherid != null">
        fatherid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="sequences != null">
        sequences,
      </if>
      <if test="isextend != null">
        isextend,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null">
        #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="fatherid != null">
        #{fatherid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequences != null">
        #{sequences,jdbcType=VARCHAR},
      </if>
      <if test="isextend != null">
        #{isextend,jdbcType=CHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDoExample" resultType="java.lang.Long">
    select count(*) from t_base_operator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_base_operator
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginname != null">
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginpwd != null">
        loginpwd = #{record.loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null">
        rolename = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null">
        roleid = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.fatherid != null">
        fatherid = #{record.fatherid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sequences != null">
        sequences = #{record.sequences,jdbcType=VARCHAR},
      </if>
      <if test="record.isextend != null">
        isextend = #{record.isextend,jdbcType=CHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null">
        isdelete = #{record.isdelete,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_base_operator
    set id = #{record.id,jdbcType=INTEGER},
      loginname = #{record.loginname,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      loginpwd = #{record.loginpwd,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      rolename = #{record.rolename,jdbcType=VARCHAR},
      roleid = #{record.roleid,jdbcType=INTEGER},
      fatherid = #{record.fatherid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      sequences = #{record.sequences,jdbcType=VARCHAR},
      isextend = #{record.isextend,jdbcType=CHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDo">
    update t_base_operator
    <set>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null">
        loginpwd = #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="fatherid != null">
        fatherid = #{fatherid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequences != null">
        sequences = #{sequences,jdbcType=VARCHAR},
      </if>
      <if test="isextend != null">
        isextend = #{isextend,jdbcType=CHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hndl.cn.dao.system.bean.TBaseOperatorDo">
    update t_base_operator
    set loginname = #{loginname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      loginpwd = #{loginpwd,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      rolename = #{rolename,jdbcType=VARCHAR},
      roleid = #{roleid,jdbcType=INTEGER},
      fatherid = #{fatherid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      sequences = #{sequences,jdbcType=VARCHAR},
      isextend = #{isextend,jdbcType=CHAR},
      openid = #{openid,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>